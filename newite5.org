# Letranger

## 題目敘述
* 懶散是人類的天性，對許多人而言，事情能拖則拖，眼前的舒適與悠閒才是最真實的，至於還沒做完的事... I'll think about it tomorrow!
* 然而我們知道，該做的事情如果一直拖下去，則事情的複雜度與準時完成的困難度就會與日俱增，對於這種現象，劍橋大學三一學院(Trinity College, Cambridge)的著名 學者Letranger提出了一項報告，歸納出解決某事件之困難度與拖延日數間的關連性，並以函數function(n)表示，該function內容如下：
1. 如果在預定解決日(n=1)即動手開始工作，則完成該事件的困難度為1
2. 如果往後拖延1日，則完成該事件的困難度將大幅提升為f(n)*f(n) + f(n) +1
* 聽說這個研究是基於該研究者累積數十年的拖延習慣而得到的血淚教訓.....
* 舉例來說，一件事拖延到第二天，完成的困難度就會提升為三倍```f(2)=3```，由此看來，這個function應該是會累積的非常之快，可能拖個幾天就會快到整數無法表示

## 輸入說明

輸入n，```n```為拖延日數。
(整數範圍)

## 輸出說明

輸出```完成該事件之困難度```。(行尾需換行)
輸出遞迴呼叫過程及```完成該事件之困難度```。(每行都要換行)

## 範例輸入
```
2
```

## 範例輸出
```
letranger(2)
letranger(1)
letranger(1)
letranger(1)
3
```

* 參考解答
#+begin_src C
#include<stdio.h>
long long int letranger(int n)
{
    printf("letranger(%ld)\n",n);
    if (n==1) {
       return 1;
    } else {
       return letranger(n-1)*letranger(n-1) + letranger(n-1) + 1;
    }
}

int main()
{
    printf("%ld\n", letranger(2));
    return 0;
}
#+end_src

#+RESULTS:
| letranger(2) |
| letranger(1) |
| letranger(1) |
| letranger(1) |
| 3            |
