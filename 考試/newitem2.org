# Rotate! Magic Square!

## 題目敘述

* 在玩夠了大大小小的魔方後，小方決定利用C++來寫一個解魔方的教學App...
* 這個App預計讓使用者藉由方向鍵來上下左右旋轉一個魔方，並加上一Ctrl、Shift鍵來轉動一層或一面....
* 但是所謂萬事起頭難，小方目前連最基本的左，右旋轉90度都做不出來，既然你都了解他面臨的困難了，不妨就順手幫他一下吧...

## 輸入說明

* 輸入：n,r,以及n*n個數字；n代表接下來有一個n*n的魔方，r代表要轉動的方向(0為左轉、1為右轉)，接下來的n*n個數字各代表魔方朝上的一面，該面的每一色塊以一個數字做代表

## 輸出說明
* 旋轉後的該面魔方，每一數字後接一個空白
* 每行結尾需加跳行


## 範例輸入
```
3
1
1 2 3
4 5 6
7 8 9
```

## 範例輸出
```
7 4 1
8 5 2
9 6 3
```

* 參考解答
#+begin_src C
#include<stdio.h>
int main()
{
    int n;
    n = 3;
    int matrix[3][3] = {
        { 1, 2, 3 },
        { 4, 5, 6 },
        { 7, 8, 9 }
    };
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
    printf("\n");
    for (int i = 0; i < n; i++) {
        for (int j = n-1; j >= 0; j--) {
            printf("%d ", matrix[j][i]);
        }
        printf("\n");
    }
    printf("\n");
    for (int i = n-1; i >= 0; i--) {
        for (int j = 0; j < n; j++) {
            printf("%d ", matrix[j][i]);
        }
        printf("\n");
    }
    return 0;
}
#+end_src

#+RESULTS:
| 1 | 2 | 3 |
| 4 | 5 | 6 |
| 7 | 8 | 9 |
|   |   |   |
| 7 | 4 | 1 |
| 8 | 5 | 2 |
| 9 | 6 | 3 |
|   |   |   |
| 3 | 6 | 9 |
| 2 | 5 | 8 |
| 1 | 4 | 7 |

* 測資
** case 1
*** input
30 25 20
*** output
120
** case 2
*** input
35 40 30
*** output
1020
** case 3
*** input
45 50 100
*** output
156
** case 4
*** input
100 200 100
*** output
6
