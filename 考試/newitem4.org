# Ackermann function 

## Problem
In computability theory, the Ackermann function, named after Wilhelm Ackermann, is one of the simplest[1] and earliest-discovered examples of a total computable function that is not primitive recursive. All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive.


After Ackermann's publication of his function (which had three nonnegative integer arguments), many authors modified it to suit various purposes, so that today "the Ackermann function" may refer to any of numerous variants of the original function. One common version, the two-argument Ackermann–Péter function, is defined as follows for nonnegative integers m and n:

$$ A(m, n) =
\begin{cases}
n+1 & \mbox{if } m = 0 \\\
A(m-1, 1) & \mbox{if } m > 0 \mbox{ and } n = 0 \\\
A(m-1, A(m, n-1)) & \mbox{if } m > 0 \mbox{ and } n > 0.
\end{cases}
$$

Its value grows rapidly, even for small inputs. For example, ```A```(4,2) is an integer of ```19,729``` decimal digits.

## Input

The input data contains two integers m and n

## Output

Output the value of A(m, n).

## Input Sample
```
3 5
```

## 範例輸出
```
3*power(3,4)
3*power(3,3)
3*power(3,2)
3*power(3,1)
243
```
